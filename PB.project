{
    APPCLASS = Chess; 
    DYNAMIC_CODE_GEN = YES; 
    English_RESOURCES = {}; 
    FILESTABLE = {
        CLASSES = (
            Chess.m, 
            Board.m, 
            Board3D.m, 
            Square.m, 
            Square3D.m, 
            ResponseMeter.m, 
            Clock.m, 
            ChessListener.cp
        ); 
        C_FILES = (); 
        English_IMAGES = (
            black_rook.tiff, 
            black_pawn.tiff, 
            white_bishop.tiff, 
            white_rook.tiff, 
            clock.tiff, 
            black_king.tiff, 
            3d_board.tiff, 
            black_queen.tiff, 
            black_knight.tiff, 
            3d_black_sample.tiff, 
            black.tiff, 
            white_pawn.tiff, 
            black_bishop.tiff, 
            3d_pieces.tiff, 
            white_king.tiff, 
            3d_plastic.tiff, 
            white_queen.tiff, 
            white_knight.tiff, 
            3d_white_sample.tiff, 
            white.tiff
        ); 
        English_INTERFACES = (Chess.nib); 
        English_OTHER_RESOURCES = (Localizable.strings, .snd.snd, Credits.rtf); 
        FRAMEWORKS = (AppKit.framework, Carbon.framework, Foundation.framework); 
        HEADERSEARCH = (/System/Library/Frameworks/Carbon.framework/Headers); 
        H_FILES = (
            Chess.h, 
            Board.h, 
            Board3D.h, 
            Square.h, 
            Square3D.h, 
            ResponseMeter.h, 
            Clock.h, 
            gnuglue.h, 
            version.h, 
            ChessListener.h
        ); 
        IMAGES = (ChessApp.tiff, ChessDoc.tiff); 
        INTERFACES = (); 
        M_FILES = (); 
        OTHER_LIBS = (); 
        OTHER_LINKED = (gnuglue.m, Chess_main.m); 
        OTHER_RESOURCES = (ApplicationNameImage.tiff, chess.tiff); 
        OTHER_SOURCES = (Makefile, Makefile.postamble, Makefile.preamble, CustomInfo.plist); 
        PRECOMPILED_HEADERS = (); 
        PROJECT_HEADERS = (); 
        PSWM_FILES = (); 
        PUBLIC_HEADERS = (); 
        SOUNDS = (); 
        STRINGS_FILES = (); 
        SUBPROJECTS = (gnuchess.subproj); 
    }; 
    GENERATEMAIN = YES; 
    LANGUAGE = English; 
    MAKEFILEDIR = "$(MAKEFILEPATH)/pb_makefiles"; 
    NEXTSTEP_APPICON = chess.tiff; 
    NEXTSTEP_BUILDTOOL = /bin/gnumake; 
    NEXTSTEP_DOCUMENTEXTENSIONS = ({Extension = chess; Image = ChessDoc.tiff; }); 
    NEXTSTEP_INSTALLDIR = "$(SYSTEM_DEMOS_DIR)"; 
    NEXTSTEP_JAVA_COMPILER = /usr/bin/javac; 
    NEXTSTEP_MAINNIB = Chess; 
    NEXTSTEP_OBJCPLUS_COMPILER = /usr/bin/cc; 
    PDO_UNIX_BUILDDIR = ""; 
    PDO_UNIX_BUILDTOOL = $NEXT_ROOT/Developer/bin/make; 
    PDO_UNIX_COMPILEROPTIONS = ""; 
    PDO_UNIX_INSTALLDIR = "$(SYSTEM_DEMOS_DIR)"; 
    PDO_UNIX_JAVA_COMPILER = "$(NEXTDEV_BIN)/javac"; 
    PDO_UNIX_LINKEROPTIONS = ""; 
    PDO_UNIX_MAINNIB = Chess; 
    PDO_UNIX_OBJCPLUS_COMPILER = "$(NEXTDEV_BIN)/gcc"; 
    PROJECTNAME = Chess; 
    PROJECTTYPE = Application; 
    PROJECTVERSION = 2.8; 
    SYSTEMEXTENSIONS = (); 
    WINDOWS_BUILDDIR = ""; 
    WINDOWS_BUILDTOOL = $NEXT_ROOT/Developer/Executables/make; 
    WINDOWS_COMPILEROPTIONS = ""; 
    WINDOWS_INSTALLDIR = "$NEXT_ROOT$(SYSTEM_DEMOS_DIR)"; 
    WINDOWS_JAVA_COMPILER = "$(JDKBINDIR)/javac.exe"; 
    WINDOWS_LINKEROPTIONS = ""; 
    WINDOWS_MAINNIB = Chess; 
    WINDOWS_OBJCPLUS_COMPILER = "$(DEVDIR)/gcc"; 
}
